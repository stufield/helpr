% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filesystem.R
\name{filesystem}
\alias{filesystem}
\alias{mv_path}
\alias{as_mv_path}
\alias{is.dir}
\alias{ls_dir}
\alias{info_dir}
\alias{file_ext}
\alias{file_ext<-}
\alias{rm_file_ext}
\alias{set_file_ext}
\alias{as_mv_bytes}
\title{File System Utilities}
\usage{
mv_path(..., ext = "")

as_mv_path(x)

is.dir(x)

ls_dir(dir = ".", regexp = NULL, all = FALSE, ...)

info_dir(dir = ".", ...)

file_ext(file)

file_ext(file) <- value

rm_file_ext(file)

set_file_ext(file, ext)

as_mv_bytes(x)
}
\arguments{
\item{...}{Character vectors to construct paths, \code{length == 1}
values are recycled as appropriate too complete pasting.
Alternatively, arguments passed to \code{\link[=dir]{dir()}} (for \code{\link[=ls_dir]{ls_dir()}}).}

\item{ext, value}{An optional extension to append to the generated path.}

\item{regexp}{A regular expression, e.g. "\verb{[.]csv$}", see the \code{pattern}
argument to \code{\link[=dir]{dir()}}. Files are collated according to \code{"C"} locale rules,
so that they are ordered consistently with \code{\link[fs:dir_ls]{fs::dir_ls()}}.}

\item{all}{If \code{TRUE} hidden files are also returned.}

\item{file, x, dir}{A file-system location, directory, or path.
Vectorized paths are allowed where possible.}
}
\description{
Generalized file system utilities and operations customized for
data structures.
It was heavily influenced by the
\pkg{fs} package: \url{https://github.com/r-lib/fs}.
}
\section{Functions}{
\itemize{
\item \code{mv_path()}: Construct a path to a file.

\item \code{as_mv_path()}: Coerce to a \code{mv_path} object.

\item \code{is.dir()}: Test if location is a directory.

\item \code{ls_dir()}: List the directory contents.

\item \code{info_dir()}: Lists the directory contents similar to \code{ls -l}.

\item \code{file_ext()}: Extracts the file extension from a file path.

\item \code{file_ext(file) <- value}: Replaces an existing extension. See \code{\link[=set_file_ext]{set_file_ext()}}.

\item \code{rm_file_ext()}: Removes the file extension from a file path.

\item \code{set_file_ext()}: Replaces the existing file extension with \code{ext}.
Extensions of \code{length == 1} are recycled.

\item \code{as_mv_bytes()}: Coerce to a \code{mv_bytes} object.

}}
\examples{
# paths
mv_path("foo", "bar", "baz")    # no ext

mv_path("foo", "bar", "baz", ext = "zip")  # ext

mv_path("foo", letters[1:3], ext = "txt")  # recycled args

# directories
ls_dir()

is.dir(ls_dir())

info_dir()

# extensions
file_ext("foo.txt")

rm_file_ext("foo/bar.txt")

set_file_ext("foo/bar.csv", "tsv")
set_file_ext(c("foo.txt", NA, "bar.csv"), "R")   # NAs unchanged & 'R' recycled

x <- "foo.txt"
file_ext(x) <- "csv"
x
}
