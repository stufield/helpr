% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liter.R
\name{liter}
\alias{liter}
\title{List Iteration}
\usage{
liter(.x, .y = NULL, .f, ...)
}
\arguments{
\item{.x, .y}{Vectors or objects of the same length.}

\item{.f}{A function to map values over.}

\item{...}{Additional arguments passed on to the mapped function.}
}
\value{
Always returns a list. The returned list is named by the
names of \code{.x} or by \code{.x} itself if possible.
}
\description{
A thin wrapper around \code{\link[=mapply]{mapply()}} that iterates over \emph{paired} \code{.x} and \code{.y}
values. They \emph{must} have the same length elements but can be any
R object to iterate over. Similar to \code{\link[purrr:map2]{purrr::map2()}} without having to
import the \pkg{purrr} package.
If \code{.y} is missing and \code{.x} is named, this is equal to
\code{liter(.x, names(.x), ...)}, which is equal to \code{\link[purrr:imap]{purrr::imap()}}.
}
\examples{
x <- LETTERS
names(x) <- letters
liter(x, 1:26, paste, sep = "-") |> head()

# .y = NULL; uses names(.x)
liter(x, .f = paste, sep = "-") |> head()

# .y = index 1:3
liter(c("a", "b" , "c"), .f = paste, sep = "=")

# anonymous on-the-fly .f()
liter(1:6, rnorm(6), function(.x, .y) .x + .y^2) |> unlist()
}
