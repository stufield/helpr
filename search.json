[{"path":"https://stufield.github.io/helpr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 helpr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stufield.github.io/helpr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with helpr","title":"Getting help with helpr","text":"Thanks using helpr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://stufield.github.io/helpr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with helpr","text":"can’t reproduce bug, can’t fix ! Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (excellent ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help!.","code":""},{"path":"https://stufield.github.io/helpr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with helpr","text":"Armed reprex, next step figure ask: ’s question: start community.rstudio.com /StackOverflow. people answer questions. ’s bug: ’re right place -> file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers, :pr, :closed, etc., needed, e.g. ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"useful-functions-in-helpr","dir":"Articles","previous_headings":"","what":"Useful functions in helpr","title":"Introduction to helpr","text":"File-system: See ?filesystem Signal UI: See ?signal Symbols: See ?sybml squish() trim() pad() capture() be_safe() be_quiet() be_hard() List iteration, similar purrr::imap() simpler calc_ccc(): Calculate Lin’s Concordance Correlation Coefficient two vectors numeric data. calc_ss(): Calculate sum squared errors: ∑(x−x‾)2\\sum{(x - \\bar x)^2} numeric data. rep_lgl(): elements vector identical? is_monotonic(): numerical elements vector monotonically increasing decreasing? is_logspace(): given object (vector, data.frame, tbl_df) appear log-space? Note: function biased proteomic data expected accurate applications ---box. Create contingency table counts generated cross-classifying. Generate diffs two vectors (typically character) data. Returns sided setdiff, union intersect. Generate standardized data (default) YYYY-MM-DD.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"cross_tab","dir":"Articles","previous_headings":"Examples","what":"cross_tab()","title":"Introduction to helpr","text":"need “quote” passed arguments, unquoted strings fine parsed NSE (non-standard evaluation). ... can take either one two column names:","code":"# 1 factor cross_tab(mtcars, cyl)      # unquoted string #> cyl #>   4   6   8 Sum  #>  11   7  14  32  cross_tab(mtcars, \"cyl\")    # quoted string #> cyl #>   4   6   8 Sum  #>  11   7  14  32  var <- \"cyl\" cross_tab(mtcars, var)      # external variable #> cyl #>   4   6   8 Sum  #>  11   7  14  32  cross_tab(mtcars, cyl, gear)      # 2 factors #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32  cross_tab(mtcars, cyl, gear, am)  # 3 factors #> , , am = 0 #>  #>      gear #> cyl    3  4  5 Sum #>   4    1  2  0   3 #>   6    2  2  0   4 #>   8   12  0  0  12 #>   Sum 15  4  0  19 #>  #> , , am = 1 #>  #>      gear #> cyl    3  4  5 Sum #>   4    0  6  2   8 #>   6    0  2  1   3 #>   8    0  0  2   2 #>   Sum  0  8  5  13 #>  #> , , am = Sum #>  #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"calc_ccc","dir":"Articles","previous_headings":"Examples","what":"calc_ccc()","title":"Introduction to helpr","text":"Calculate ccc two numeric vectors (visualize concordance): Concordance plot visualizing calc_ccc().","code":"x <- rnorm(100, mean = 10, sd = 0.5) y <- x + rnorm(100, sd = 0.1)   # add random scatter ccc <- calc_ccc(x, y) plot(x, y, pch = 21, cex = 1.75, col = NA,      bg = rgb(red = 0, green = 0, blue = 0, alpha = 0.5),   # black w alpha      main = sprintf(\"The CCC = %0.3f with significance of p = %0.3f\",                     ccc$rho.c, ccc$p.value) ) abline(0, 1, lty = 2, col = \"blue\", lwd = 1.5) ccc #> $rho.c #> [1] 0.9778699 #>  #> $ci95 #>     lower     upper  #> 0.9675816 0.9849182  #>  #> $Z #> [1] 2.24642 #>  #> $p.value #> [1] 0.02467715"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"calc_ss","dir":"Articles","previous_headings":"Examples","what":"calc_ss()","title":"Introduction to helpr","text":"Calculate sum squared differences numeric vector. Used ubiquotously generating variances standard deviations within contexts (e.g. ANOVA, CVs):","code":"x <- rnorm(100, mean = 10, sd = 0.5) calc_ss(x) #> [1] 18.85493  calc_ss(x) / (length(x) - 1)    # variance #> [1] 0.1904538  all.equal(var(x), calc_ss(x) / (length(x) - 1))    # TRUE #> [1] TRUE"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"rep_lgl","dir":"Articles","previous_headings":"Examples","what":"rep_lgl()","title":"Introduction to helpr","text":"","code":"rep_lgl(letters) #> [1] FALSE  rep_lgl(rep(\"A\", 250)) #> [1] TRUE  rep_lgl(c(\"B\", rep(\"A\", 250))) #> [1] FALSE"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"is_monotonic","dir":"Articles","previous_headings":"Examples","what":"is_monotonic()","title":"Introduction to helpr","text":"","code":"is_monotonic(1:100) #> [1] TRUE  is_monotonic(seq(-100, 100, by = 5))     # up #> [1] TRUE  is_monotonic(seq(100, -100, by = -5))    # down #> [1] TRUE  is_monotonic(rnorm(10)) #> [1] FALSE"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"is_logspace","dir":"Articles","previous_headings":"Examples","what":"is_logspace()","title":"Introduction to helpr","text":"","code":"# A numeric vector x <- rnorm(30, mean = 1000) is_logspace(x) #> [1] FALSE  is_logspace(log(x)) #> [1] TRUE is_logspace(data) # FALSE  # log10-transform for ( i in grep(\"^ft\", names(data)) ) {   data[[i]] <- log10(data[[i]]) }  is_logspace(data) # base 10; TRUE"},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"diff_vecs","dir":"Articles","previous_headings":"Examples","what":"diff_vecs()","title":"Introduction to helpr","text":"","code":"diff_vecs(LETTERS[1:10L], LETTERS[5:15L], verbose = TRUE) # return invisible #> ℹ Vectors differ by: #> • Unique to LETTERS[1:10L] >> 4 #> • Unique to LETTERS[5:15L] >> 5 #> • Common Intersect         >> 6 #> • Union                    >> 15  (diff_vecs(LETTERS[1:10L], LETTERS[5:15L])) #> $`unique_LETTERS[1:10L]` #> [1] \"A\" \"B\" \"C\" \"D\" #>  #> $`unique_LETTERS[5:15L]` #> [1] \"K\" \"L\" \"M\" \"N\" \"O\" #>  #> $inter #> [1] \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" #>  #> $unique #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\""},{"path":"https://stufield.github.io/helpr/articles/helpr.html","id":"dater","dir":"Articles","previous_headings":"Examples","what":"dater()","title":"Introduction to helpr","text":"Standardized date format using dater().","code":"data <- data.frame(x = rnorm(100), y = rnorm(100)) plot(data$x, data$y, main = paste0(\"This is today's date: \", dater()))"},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Library Mode","text":"Lack reproducibility major obstacle large (small) organization, especially deliver products need audit trail. Installing 3rd party packages external repositories, internal “-release” development versions packages, without version commit tagging makes near impossible scale. Furthermore, installing specific package version top-level environment can make version default analyses performed environment. lib_mode() attempts solve issues creating specific library location (.e. lib.loc) specified directory top R library tree. Defaults can easily set via getOption(\"helpr_path\"). Versions packages can installed location reproducible way (e.g. via remotes package via remotes::install_github() remotes::install_version()), can scripted reproduced accurately subsequent analysts. examples show: use lib_mode() toggle back--forth modes install default library mode location","code":""},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"useful-functions","dir":"Articles","previous_headings":"Introduction","what":"Useful Functions","title":"Library Mode","text":"lib_mode() lib_tree() is_lib_mode()","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"toggle-lib_mode-onoff","dir":"Articles","previous_headings":"Introduction > Usage","what":"Toggle lib_mode() ON/OFF","title":"Library Mode","text":"Library Mode usage requires path specification desired library location via path = argument. can anywhere file system user privileges.","code":"mylib <- \"~/tmp-lib\" dir.create(mylib)     # must create a valid directory  lib_tree() #> [1] \"/Users/runner/work/_temp/Library\"                                          #> [2] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/site-library\" #> [3] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"  lib_mode(mylib)  # activate; creates lib.loc location #> ✓ Analysis mode: ON #> ✓ Using: /Users/runner/tmp-lib/  lib_tree() #> [1] \"/Users/runner/tmp-lib\"                                                     #> [2] \"/Users/runner/work/_temp/Library\"                                          #> [3] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/site-library\" #> [4] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\"  lib_mode(mylib)  # deactivate #> ✓ Analysis mode: OFF  lib_tree() #> [1] \"/Users/runner/work/_temp/Library\"                                          #> [2] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/site-library\" #> [3] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\""},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"install-3rd-party-packages-in-lib_mode","dir":"Articles","previous_headings":"Introduction > Usage","what":"Install 3rd party packages in lib_mode()","title":"Library Mode","text":"reproducibility, critical install path using specific package version, can accomplished via remotes::install_version() installing third-party package:","code":"packageVersion(\"spelling\") #> [1] '2.3.1'  lib_mode(mylib) #> ✓ Analysis mode: ON #> ✓ Using: /Users/runner/tmp-lib/  # install old `here` and `spelling` versions # by default installs to .libPaths()[1L] install_version(\"here\", version = \"0.1\", dependencies = FALSE,                 upgrade = FALSE, quiet = TRUE) install_version(\"spelling\", version = \"1.1\", dependencies = FALSE,                 upgrade = FALSE, quiet = TRUE)  packageVersion(\"spelling\") #> [1] '1.1'  lib_mode(mylib) #> ✓ Analysis mode: OFF"},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"re-activating-lib_mode","dir":"Articles","previous_headings":"Introduction > Usage","what":"Re-activating lib_mode()","title":"Library Mode","text":"next time activate “lib mode”, notified using set installed libraries (spelling):","code":"lib_mode(mylib) #> ✓ Analysis mode: ON #> ✓ Using: /Users/runner/tmp-lib/ #> • here     '0.1' #> • spelling '1.1'"},{"path":"https://stufield.github.io/helpr/articles/lib-mode.html","id":"using-getoptionhelpr_path","dir":"Articles","previous_headings":"Introduction","what":"Using getOption(\"helpr_path\")","title":"Library Mode","text":"Another option use lib_mode() without arguments set helpr_path option via options(helpr_path = \"path//lib\"). can set early script setup chunk Rmarkdown. discouraged set option .Rprofile portable across users /machines.","code":"# uses the 'helpr_path' option set options(helpr_path = mylib) lib_mode() #> ✓ Analysis mode: ON #> ✓ Using: /Users/runner/tmp-lib/ #> • here     '0.1' #> • spelling '1.1'"},{"path":"https://stufield.github.io/helpr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stu Field. Author, maintainer, copyright holder.","code":""},{"path":"https://stufield.github.io/helpr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Field S (2024). helpr: Helper Utilities R. R package version 0.0.1, https://stufield.github.io/helpr.","code":"@Manual{,   title = {helpr: Helper Utilities for R},   author = {Stu Field},   year = {2024},   note = {R package version 0.0.1},   url = {https://stufield.github.io/helpr}, }"},{"path":[]},{"path":"https://stufield.github.io/helpr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Helper Utilities for R","text":"helpr package contains numerous helper functions necessary generalized machine learning analyses. contains exports numerous utilities S3 generics used throughout personal analysis suite. intentionally favors base R higher level tidyverse keep imports minimum.","code":""},{"path":"https://stufield.github.io/helpr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Utilities for R","text":"","code":"# current dev version remotes::install_github(\"stufield/helpr\")  # or a specific version remotes::install_github(\"stufield/helpr@v0.0.1\")"},{"path":"https://stufield.github.io/helpr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Helper Utilities for R","text":"load helpr simply make call library() usual:","code":"library(helpr)"},{"path":"https://stufield.github.io/helpr/index.html","id":"help-summary-of-the-package","dir":"","previous_headings":"","what":"Help summary of the package","title":"Helper Utilities for R","text":"","code":"library(help = helpr)"},{"path":"https://stufield.github.io/helpr/index.html","id":"notes-about-the-package","dir":"","previous_headings":"","what":"Notes about the package","title":"Helper Utilities for R","text":"TODO TODO TODO","code":""},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Class to an Object — add_class","title":"Add a Class to an Object — add_class","text":"Utility prepend new class(es) existing objects.","code":""},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Class to an Object — add_class","text":"","code":"add_class(x, class)"},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Class to an Object — add_class","text":"x object receive new class(es). class character(n). name additional class(es).","code":""},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Class to an Object — add_class","text":"object new classes.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a Class to an Object — add_class","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/add_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Class to an Object — add_class","text":"","code":"class(iris) #> [1] \"data.frame\"  add_class(iris, \"new\") |> class() #> [1] \"new\"        \"data.frame\"  add_class(iris, c(\"A\", \"B\")) |> class()    # 2 classes #> [1] \"A\"          \"B\"          \"data.frame\"  add_class(iris, c(\"A\", \"data.frame\")) |> class()    # no duplicates #> [1] \"A\"          \"data.frame\"  add_class(iris, c(\"data.frame\", \"A\")) |> class()    # re-orders if exists #> [1] \"data.frame\" \"A\""},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Concordance Correlation Coefficient — calc_ccc","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"Calculate concordance correlation coefficient (CCC) significance value two vectors related data.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"","code":"calc_ccc(x, y)"},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"x, y numeric(n) vectors length.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"list following: rho.c: concordance correlation coefficient (CCC). ci95: 95 percent confidence intervals CCC. Z: z-score CCC. p.value: p-value corresponding Z-score.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"Lawrence Lin, Biometrics (45): 255-268.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ccc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Concordance Correlation Coefficient — calc_ccc","text":"","code":"calc_ccc(rnorm(100), rnorm(100)) #> $rho.c #> [1] -0.02673654 #>  #> $ci95 #>      lower      upper  #> -0.2207296  0.1692914  #>  #> $Z #> [1] -0.02674292 #>  #> $p.value #> [1] 0.9786648 #>   v <- rnorm(100) calc_ccc(v, v + 1) #> $rho.c #> [1] 0.6862789 #>  #> $ci95 #>     lower     upper  #> 0.6211870 0.7419661  #>  #> $Z #> [1] 0.8408875 #>  #> $p.value #> [1] 0.400411 #>"},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate q-values — calc_qvalue","title":"Calculate q-values — calc_qvalue","text":"Calculates vector q-values corresponding vector p-values.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate q-values — calc_qvalue","text":"","code":"calc_qvalue(   p,   lambda = seq(0, 0.95, 0.01),   lambda_eval = NULL,   match_storey = FALSE )  # S3 method for class 'q_value' plot(x, ..., rng = c(0, 0.25))"},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate q-values — calc_qvalue","text":"p vector p-values. lambda sequence lambdas evaluate. lambda_eval value lambda evaluate , defaults maximum value lambda sequence. match_storey logical(1). output match qvalue() function exactly? x q_value class object. ... Additional arguments passed S3 plot generic. rng numeric(2). Range values.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate q-values — calc_qvalue","text":"list class q_value containing: call original call calc_qvalue(). p_value original vector p-values. m ? lambda ? lambda_eval ? pi_lambda ? spline_fit ? pi0 ? q_value vector q-values. cool plot.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate q-values — calc_qvalue","text":"John Storey. PNAS. 2003.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate q-values — calc_qvalue","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_qvalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate q-values — calc_qvalue","text":"","code":"x <- withr::with_seed(101, c(seq(0.0001, 0.05, length = 50), runif(950))) q <- calc_qvalue(x)  # S3 plot method plot(q)"},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Sum of Squared Errors — calc_ss","title":"Calculate the Sum of Squared Errors — calc_ss","text":"Calculates sum squared errors (SSE) vector numeric data.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Sum of Squared Errors — calc_ss","text":"","code":"calc_ss(x)"},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Sum of Squared Errors — calc_ss","text":"x numeric vector data.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Sum of Squared Errors — calc_ss","text":"Sum Squared Errors (SSE) x.","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the Sum of Squared Errors — calc_ss","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/calc_ss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Sum of Squared Errors — calc_ss","text":"","code":"calc_ss(rnorm(100, 50, 5)) #> [1] 2436.067"},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R Objects to a Data Frame — convert2df","title":"Convert R Objects to a Data Frame — convert2df","text":"Attempt \"smartly\" convert arbitrary object data.frame object keep dimensions style.","code":""},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R Objects to a Data Frame — convert2df","text":"","code":"convert2df(x)"},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R Objects to a Data Frame — convert2df","text":"x One following classes: list table matrix numeric integer factor character","code":""},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R Objects to a Data Frame — convert2df","text":"x, converted data.frame.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert R Objects to a Data Frame — convert2df","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/convert2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R Objects to a Data Frame — convert2df","text":"","code":"# Compare outputs:  # Character char <- head(letters, 10) char #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"  as.data.frame(char) #>    char #> 1     a #> 2     b #> 3     c #> 4     d #> 5     e #> 6     f #> 7     g #> 8     h #> 9     i #> 10    j convert2df(char) #>   v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 #> 1  a  b  c  d  e  f  g  h  i   j  # table tab <- table(sample(c(\"A\", \"B\"), 30, replace = TRUE)) tab #>  #>  A  B  #> 17 13   as.data.frame(tab) #>   Var1 Freq #> 1    A   17 #> 2    B   13 convert2df(tab) #>    A  B #> 1 17 13  # matrix mat <- matrix(1:9, ncol = 3L) mat #>      [,1] [,2] [,3] #> [1,]    1    4    7 #> [2,]    2    5    8 #> [3,]    3    6    9  as.data.frame(mat) #>   V1 V2 V3 #> 1  1  4  7 #> 2  2  5  8 #> 3  3  6  9 convert2df(mat) #>         #> 1 1 4 7 #> 2 2 5 8 #> 3 3 6 9"},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Create A Formula — create_form","title":"Create A Formula — create_form","text":"convenient utility quickly generate formula objects standardized format environment.","code":""},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create A Formula — create_form","text":"","code":"create_form(response, features, collapse = c(\"+\", \"*\"), env = NULL)"},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create A Formula — create_form","text":"response quoted string representing LHS formula, .e. response variable (Y). features vector quoted strings representing model features/predictors. Used generate right-hand side (RHS) formula. collapse character(1). separator features. Typically either + main effects, * interactions. env environment evaluate formula. keep formula object light-weight possible, default current function environment/scope. However, occasions (e.g. unit testing) may require formula's environment capture certain objects necessary fit model (e.g. weights).","code":""},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create A Formula — create_form","text":"stats formula. See formula().","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create A Formula — create_form","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/create_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create A Formula — create_form","text":"","code":"ft <- c(\"ft_1234.56\", \"ft_8899.8\", \"ft_3334.3\") f1 <- create_form(\"class\", ft) print(f1, showEnv = FALSE) #> class ~ ft_1234.56 + ft_8899.8 + ft_3334.3  # environment manipulation # cleanest light-weight formula (default) ls(environment(f1)) #> [1] \"env\"  \"expr\"  # capture another environment e     <- new.env() e$new <- LETTERS e$obj <- rnorm(100) f2    <- create_form(\"class\", ft, env = e) ls(environment(f2)) #> [1] \"new\" \"obj\""},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Tabulate Counts — cross_tab","title":"Cross Tabulate Counts — cross_tab","text":"Create contingency table counts generated cross-classifying factors groups splitting values passed ... argument. sums row column added result.","code":""},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Tabulate Counts — cross_tab","text":"","code":"cross_tab(x, ..., useNA = \"ifany\")"},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Tabulate Counts — cross_tab","text":"x data.frame (-like) object containing data variables counts desired. ... number unquoted expressions quoted strings separated commas. Generally greater 3 useful. useNA See table().","code":""},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Tabulate Counts — cross_tab","text":"table grouped counts based splitting variables sums factor.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross Tabulate Counts — cross_tab","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/cross_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Tabulate Counts — cross_tab","text":"","code":"# 1 factor cross_tab(mtcars, cyl) #> cyl #>   4   6   8 Sum  #>  11   7  14  32   # quoted string cross_tab(mtcars, \"cyl\") #> cyl #>   4   6   8 Sum  #>  11   7  14  32   # with external variable var <- \"cyl\" cross_tab(mtcars, var) #> cyl #>   4   6   8 Sum  #>  11   7  14  32   # 2 factors cross_tab(mtcars, cyl, gear) #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32  cross_tab(mtcars, \"cyl\", \"gear\") #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32  cross_tab(mtcars, c(\"cyl\", \"gear\")) #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32  # 3 factors cross_tab(mtcars, cyl, gear, am) #> , , am = 0 #>  #>      gear #> cyl    3  4  5 Sum #>   4    1  2  0   3 #>   6    2  2  0   4 #>   8   12  0  0  12 #>   Sum 15  4  0  19 #>  #> , , am = 1 #>  #>      gear #> cyl    3  4  5 Sum #>   4    0  6  2   8 #>   6    0  2  1   3 #>   8    0  0  2   2 #>   Sum  0  8  5  13 #>  #> , , am = Sum #>  #>      gear #> cyl    3  4  5 Sum #>   4    1  8  2  11 #>   6    2  4  1   7 #>   8   12  0  2  14 #>   Sum 15 12  5  32 #>"},{"path":"https://stufield.github.io/helpr/reference/dater.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Date Format — dater","title":"Standardize Date Format — dater","text":"convenient wrapper print current date consistent format package suite functionality.","code":""},{"path":"https://stufield.github.io/helpr/reference/dater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Date Format — dater","text":"","code":"dater(x = \"%Y-%m-%d\")"},{"path":"https://stufield.github.io/helpr/reference/dater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Date Format — dater","text":"x alternative format standard format.","code":""},{"path":"https://stufield.github.io/helpr/reference/dater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Date Format — dater","text":"current date YYYY-MM-DD format (default).","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/dater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Date Format — dater","text":"","code":"# with default format dater() #> [1] \"2024-12-11\"  # pass alternative format dater(\"%Y-%m-%d || %H:%M:%S\") #> [1] \"2024-12-11 || 18:29:55\""},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Diff Two Vectors — diff_vecs","title":"Diff Two Vectors — diff_vecs","text":"convenient diff tool determine two character vectors differ.","code":""},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diff Two Vectors — diff_vecs","text":"","code":"diff_vecs(x, y, verbose = interactive())"},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diff Two Vectors — diff_vecs","text":"x character(n). First vector compare. y character(n). Second vector compare. verbose logical(1). diff summary printed directly console? TRUE interactive sessions.","code":""},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diff Two Vectors — diff_vecs","text":"invisible list returned set diffs vector. elements list : unique_x: Entries unique x. unique_y: Entries unique y. inter: intersect x y. unique: union() x y.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diff Two Vectors — diff_vecs","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/diff_vecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diff Two Vectors — diff_vecs","text":"","code":"diff_vecs(LETTERS[1:10L], LETTERS[5:15L])  diffs <- diff_vecs(LETTERS[1:10L], LETTERS[5:15L], verbose = FALSE) diffs #> $`unique_LETTERS[1:10L]` #> [1] \"A\" \"B\" \"C\" \"D\" #>  #> $`unique_LETTERS[5:15L]` #> [1] \"K\" \"L\" \"M\" \"N\" \"O\" #>  #> $inter #> [1] \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" #>  #> $unique #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" #>"},{"path":"https://stufield.github.io/helpr/reference/dots_list2.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic List Param Collection Rename Elements of a List — dots_list2","title":"Dynamic List Param Collection Rename Elements of a List — dots_list2","text":"Helper collect ... params internally passed support non-standard evaluation splicing. See rlang::dots_list() rlang::list2(). general stripped version avoid rlang import keeping package footprint minimal.","code":""},{"path":"https://stufield.github.io/helpr/reference/dots_list2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic List Param Collection Rename Elements of a List — dots_list2","text":"","code":"dots_list2(...)"},{"path":"https://stufield.github.io/helpr/reference/dots_list2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic List Param Collection Rename Elements of a List — dots_list2","text":"... Arguments collect list. arguments dynamic","code":""},{"path":"https://stufield.github.io/helpr/reference/dots_list2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic List Param Collection Rename Elements of a List — dots_list2","text":"named list corresponding expressions passed ... inputs.","code":""},{"path":"https://stufield.github.io/helpr/reference/dots_list2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic List Param Collection Rename Elements of a List — dots_list2","text":"","code":"foo <- function(...) {   print(dots_list2(...))   invisible() } foo(a = 2, b = 4) #> $a #> [1] 2 #>  #> $b #> [1] 4 #>   foo(a = 2, b = 4, fun = function(x) mean(x)) #> $a #> [1] 2 #>  #> $b #> [1] 4 #>  #> $fun #> function (x)  #> mean(x) #> <environment: 0x140fcbb68> #>   foo(data.frame(a = 1, b = 2), data.frame(a = 8, b = 4)) #> [[1]] #>   a b #> 1 1 2 #>  #> [[2]] #>   a b #> 1 8 4 #>   # supports !!! splicing args <- list(a = 2, b = 4, fun = function(x) mean(x)) foo(!!!args) #> $a #> [1] 2 #>  #> $b #> [1] 4 #>  #> $fun #> function (x)  #> mean(x) #> <environment: 0x140fcbb68> #>"},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily Subset Elements of Objects — elements","title":"Easily Subset Elements of Objects — elements","text":"Alternatives purrr::keep(), purrr::discard(), purrr::compact(), without load purrr namespace. syntax behavior generally , exceptions (see Details). example, compact_it() similar purrr::compact(), however supports default behavior non-empty elements retained.","code":""},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily Subset Elements of Objects — elements","text":"","code":"keep_it(x, lgl, ...)  discard_it(x, lgl, ...)  compact_it(x)"},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily Subset Elements of Objects — elements","text":"x list, data frame, vector. lgl logical(n).  vector function returns logical vector applied elements x. ... Named arguments passed lgl function.","code":""},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easily Subset Elements of Objects — elements","text":"functions simple drop-replacement, support quasi-quotation formula syntax, sufficient replacement cases.","code":""},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Easily Subset Elements of Objects — elements","text":"keep_it(): keeps elements corresponding lgl. discard_it(): inverse keep_it(). compact_it(): subsets elements non-zero length.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily Subset Elements of Objects — elements","text":"","code":"# pass a logical vector lst <- list(A = 1, B = 2, C = 3) keep_it(lst, c(TRUE, FALSE, TRUE)) #> $A #> [1] 1 #>  #> $C #> [1] 3 #>   # logical vector on-the-fly vec <- unlist(lst) keep_it(vec, vec != 2) #> A C  #> 1 3   # subset itself keep_it(c(a = TRUE, b = FALSE, c = TRUE), identity) #>    a    c  #> TRUE TRUE   # pass a simple function lst <- replicate(10, sample(10, 5), simplify = FALSE) keep_it(lst, function(x) mean(x) > 6) #> [[1]] #> [1]  5  3  7  9 10 #>  #> [[2]] #> [1]  9 10  5  8  4 #>  #> [[3]] #> [1]  9 10  3  2  8 #>  #> [[4]] #> [1]  8  5  7  1 10 #>   # will work on data frames df <- data.frame(a = 5, b = 2, c = 10) keep_it(df, function(x) x >= 5) #>   a  c #> 1 5 10  df <- data.frame(a = \"A\", b = \"B\", c = 10, d = 20) keep_it(df, is.numeric) #>    c  d #> 1 10 20  # compact_it() selects elements with non-zero length lst <- list(A = 5, B = character(0), C = 6, D = NULL, E = NA, F = list()) compact_it(lst) #> $A #> [1] 5 #>  #> $C #> [1] 6 #>  #> $E #> [1] NA #>  # discard_it() works nicely with `be_safe()` .f <- be_safe(log10) res <- .f(\"5\") discard_it(res, is.null) #> $error #> [1] \"non-numeric argument to mathematical function\" #>"},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Enrichment — enrich_test","title":"Test for Enrichment — enrich_test","text":"Calculated whether 2x2 table enriched particular group using Hypergeometric Distribution Fisher's Exact test count data.","code":""},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Enrichment — enrich_test","text":"","code":"enrich_test(x, alternative = NULL)  # S3 method for class 'list' enrich_test(x, alternative = c(\"two.sided\", \"enrich\", \"deplete\"))  # S3 method for class 'data.frame' enrich_test(x, alternative = c(\"two.sided\", \"enrich\", \"deplete\"))  # S3 method for class 'matrix' enrich_test(x, alternative = c(\"two.sided\", \"enrich\", \"deplete\"))"},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Enrichment — enrich_test","text":"x \\(2x2\\) confusion matrix (contingency table) containing binary decisions contingency. Can also (named) list containing 4 contingencies. See . alternative character(1). Whether check \"two.sided\" (enrichment depletion) specifically one (\"enrich\" \"deplete\").","code":""},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Enrichment — enrich_test","text":"\"enrichment\" class object, list significance tests calculated Hypergeometric Distribution stats::dhyper() well calculated via Fisher's Exact stats::fisher.test() test count data testing H_o odds ratio equal 1.","code":""},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Enrichment — enrich_test","text":"Can also pass named list containing: n11 corresponding [1, 1] position table/matrix. n1_ sum top row table. n_1 sum first column table. n sum table.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for Enrichment — enrich_test","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/enrich_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Enrichment — enrich_test","text":"","code":"c_mat <- matrix(c(4, 2, 3, 11), ncol = 2L) enrich_test(c_mat) #> ══ Enrichment Tests ══════════════════════════════════════════════════════ #> ── Counts Table ────────────────────────────────────────────────────────── #>      v2 #> v1    no yes #>   no   4   3 #>   yes  2  11 #>  #> ── Hypergeometric ──────────────────────────────────────────────────────── #> ℹ Alternative          two.sided #> ℹ Test-type            p-value #>  #> • 1-sided              0.07765738 #> • 2-sided              0.15531476 #> • 1-sided mid          0.04244066 #> • 2-sided mid          0.08488132 #> • 2-sided min lik      0.12192982 #> • 2-sided min lik mid★ 0.08671311 #>  #> ── Fisher's Exact ──────────────────────────────────────────────────────── #> ℹ Alternative          two.sided #>  #> • Odds Ratio           6.48649744 #> • Odds Ratio p-value   0.12192982 #> • OR CI95              [0.601, 107.532] #> ══════════════════════════════════════════════════════════════════════════  # or pass a named list en_list <- list(n11 = 4, n1_ = 7, n_1 = 6, n = 20) enrich_test(en_list) #> ══ Enrichment Tests ══════════════════════════════════════════════════════ #> ── Counts Table ────────────────────────────────────────────────────────── #>      v2 #> v1    no yes #>   no   4   3 #>   yes  2  11 #>  #> ── Hypergeometric ──────────────────────────────────────────────────────── #> ℹ Alternative          two.sided #> ℹ Test-type            p-value #>  #> • 1-sided              0.07765738 #> • 2-sided              0.15531476 #> • 1-sided mid          0.04244066 #> • 2-sided mid          0.08488132 #> • 2-sided min lik      0.12192982 #> • 2-sided min lik mid★ 0.08671311 #>  #> ── Fisher's Exact ──────────────────────────────────────────────────────── #> ℹ Alternative          two.sided #>  #> • Odds Ratio           6.48649744 #> • Odds Ratio p-value   0.12192982 #> • OR CI95              [0.601, 107.532] #> ══════════════════════════════════════════════════════════════════════════"},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Path to File — file_find","title":"Determine Path to File — file_find","text":"Determine path defined file via brute force search (optionally) root directory. Generalized file system utilities operations customized data structures. heavily influenced fs package: https://github.com/r-lib/fs.","code":""},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Path to File — file_find","text":"","code":"file_find(pattern, root = Sys.getenv(\"HOME\"))  helpr_path(..., ext = \"\")  as_helpr_path(x)  is.dir(x)  ls_dir(dir = \".\", regexp = NULL, all = FALSE, ...)  info_dir(dir = \".\", ...)  file_ext(file)  file_ext(file) <- value  rm_file_ext(file)  set_file_ext(file, ext)  as_helpr_bytes(x)"},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Path to File — file_find","text":"pattern character(1). pattern regex. root path root directory start highest level search. ... Character vectors construct paths, length == 1 values recycled appropriate complete pasting. Alternatively, arguments passed dir() (ls_dir()). ext, value optional extension append generated path. regexp regular expression, e.g. \"[.]csv$\", see pattern argument dir(). Files collated according \"C\" locale rules, ordered consistently fs::dir_ls(). TRUE hidden files also returned. file, x, dir file-system location, directory, path. Vectorized paths allowed possible.","code":""},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Path to File — file_find","text":"path(s) containing regular expression specified pattern.","code":""},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Determine Path to File — file_find","text":"helpr_path(): Construct path file. as_helpr_path(): Coerce helpr_path object. .dir(): Test location directory. ls_dir(): List directory contents. info_dir(): Lists directory contents similar ls -l. file_ext(): Extracts file extension file path. file_ext(file) <- value: Replaces existing extension. See set_file_ext(). rm_file_ext(): Removes file extension file path. set_file_ext(): Replaces existing file extension ext. Extensions length == 1 recycled. as_helpr_bytes(): Coerce helpr_bytes object.","code":""},{"path":"https://stufield.github.io/helpr/reference/filesystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine Path to File — file_find","text":"","code":"# wrapper around `ls_dir()` if (FALSE) { # \\dontrun{   file_find(\"Makefile\", \".\")   file.create(\"myfile.txt\")   file_find(\"myfile.txt\", \"..\")   unlink(\"myfile.txt\", force = TRUE) } # } # paths helpr_path(\"foo\", \"bar\", \"baz\")    # no ext #> foo/bar/baz  helpr_path(\"foo\", \"bar\", \"baz\", ext = \"zip\")  # ext #> foo/bar/baz.zip  helpr_path(\"foo\", letters[1:3], ext = \"txt\")  # recycled args #> foo/a.txt foo/b.txt foo/c.txt   # directories ls_dir() #> add_class.html    calc_ccc.html     calc_qvalue-1.png calc_qvalue.html   #> calc_ss.html      convert2df.html   create_form.html  cross_tab.html     #> dater.html        diff_vecs.html    dots_list2.html   elements.html      #> enrich_test.html  figures           index.html          is.dir(ls_dir()) #>    add_class.html     calc_ccc.html calc_qvalue-1.png  calc_qvalue.html  #>             FALSE             FALSE             FALSE             FALSE  #>      calc_ss.html   convert2df.html  create_form.html    cross_tab.html  #>             FALSE             FALSE             FALSE             FALSE  #>        dater.html    diff_vecs.html   dots_list2.html     elements.html  #>             FALSE             FALSE             FALSE             FALSE  #>  enrich_test.html           figures        index.html  #>             FALSE              TRUE             FALSE   info_dir() #> # A tibble: 15 × 9 #>    path              type       size permissions modified            user  #>    <hlpr_pth>        <chr>   <hlpr_> <chr>       <dttm>              <chr> #>  1 add_class.html    file      9.04K rw-r--r--   2024-12-11 18:29:53 runn… #>  2 calc_ccc.html     file      9.43K rw-r--r--   2024-12-11 18:29:53 runn… #>  3 calc_qvalue-1.png file    173.37K rw-r--r--   2024-12-11 18:29:54 runn… #>  4 calc_qvalue.html  file      9.98K rw-r--r--   2024-12-11 18:29:54 runn… #>  5 calc_ss.html      file      6.03K rw-r--r--   2024-12-11 18:29:54 runn… #>  6 convert2df.html   file     11.96K rw-r--r--   2024-12-11 18:29:54 runn… #>  7 create_form.html  file      10.6K rw-r--r--   2024-12-11 18:29:55 runn… #>  8 cross_tab.html    file     13.22K rw-r--r--   2024-12-11 18:29:55 runn… #>  9 dater.html        file      6.49K rw-r--r--   2024-12-11 18:29:55 runn… #> 10 diff_vecs.html    file      9.09K rw-r--r--   2024-12-11 18:29:55 runn… #> 11 dots_list2.html   file     11.95K rw-r--r--   2024-12-11 18:29:56 runn… #> 12 elements.html     file     17.85K rw-r--r--   2024-12-11 18:29:56 runn… #> 13 enrich_test.html  file     17.83K rw-r--r--   2024-12-11 18:29:57 runn… #> 14 figures           direct…    224B rwxr-xr-x   2024-12-11 18:29:52 runn… #> 15 index.html        file     18.12K rw-r--r--   2024-12-11 18:29:52 runn… #> # ℹ 3 more variables: group <chr>, changed <dttm>, accessed <dttm>  # extensions file_ext(\"foo.txt\") #> [1] \"txt\"  rm_file_ext(\"foo/bar.txt\") #> [1] \"foo/bar\"  set_file_ext(\"foo/bar.csv\", \"tsv\") #> foo/bar.tsv set_file_ext(c(\"foo.txt\", NA, \"bar.csv\"), \"R\")   # NAs unchanged & 'R' recycled #> foo.R NA    bar.R   x <- \"foo.txt\" file_ext(x) <- \"csv\" x #> foo.csv"},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Robust Gaussian Estimates — fit_gauss","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"Estimates parameters Gaussian distribution (\\(\\mu\\), \\(\\sigma\\)) via non-linear least-squares, making Gaussian assumptions error function, see pnorm(). Initial starting values chosen via robust estimates, median() mad(). mad = TRUE, starting values returned.","code":""},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"","code":"fit_gauss(x, mad = FALSE)"},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"x numeric(n). vector numeric values fit Gaussian assumptions. mad logical(1). median() mad() * 1.4826 used robust (.e. distribution-free) estimates population mean standard deviation?","code":""},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"named vector consisting non-linear least-squares estimates mu sigma x.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/fit_gauss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Robust Gaussian Estimates — fit_gauss","text":"","code":"x <- rnorm(100, 25, 3) fit_gauss(x) #>        mu     sigma  #> 24.368735  3.006532  fit_gauss(x, mad = TRUE) #>        mu     sigma  #> 24.485358  3.072565"},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Indices of Statistical Outliers — get_outliers","title":"Get Indices of Statistical Outliers — get_outliers","text":"Calculates indices vector values exceed specified statistical outlier criterion. criterion defined differently depending type outlier detection implemented (see section outlier detection ).","code":""},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Indices of Statistical Outliers — get_outliers","text":"","code":"get_outliers(   x,   n_sigma = 3,   mad_crit = 6,   fold_crit = 5,   type = c(\"nonparametric\", \"parametric\") )"},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Indices of Statistical Outliers — get_outliers","text":"x `numeric(n). vector values evaluate. n_sigma numeric(1). number standard deviations mean n_sigma threshold outliers. Ignored type = \"nonparametric\". mad_crit median absolute deviation (\"MAD\") criterion use. Ignored type = \"parametric\". Defaults (6 * mad). fold_crit fold-change criterion evaluate. Ignored type = \"parametric\". Defaults 5x. type character(1). Matched. Either \"parametric\" \"nonparametric\" determine type outliers detection implementation.","code":""},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Indices of Statistical Outliers — get_outliers","text":"\"nonparametric\": integer vector indices corresponding detected outliers. \"parametric\": integer vector indices additional attributes: mu robustly fit mean (\\(\\mu\\)). sigma robustly fit standard deviation (\\(\\sigma\\)). crit 2 critical values beyond value considered outlier.","code":""},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"outlier-detection","dir":"Reference","previous_headings":"","what":"outlier detection","title":"Get Indices of Statistical Outliers — get_outliers","text":"2 possible methods used define outlier measurement return value depends method implemented: non-parametric case (default): agnostic distribution. Outlier measurements defined falling outside mad_crit * mad median specified number fold-changes median (.e. fold_crit; e.g. \\(5x\\)).Note: n_sigma ignored. parametric case: mean standard deviation calculated robustly via fit_gauss(). Outliers defined measurements falling outside +/- n_sigma * \\(\\sigma\\) estimated \\(\\mu\\).Note: mad_crit fold_crit ignored.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Indices of Statistical Outliers — get_outliers","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/get_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Indices of Statistical Outliers — get_outliers","text":"","code":"withr::with_seed(101, {   x <- rnorm(26, 15, 2)         # Gaussian   x <- c(2, 2.5, x, 25, 25.9)   # add 4 outliers (2hi, 2lo) }) get_outliers(x)                # non-parametric (default) #> [1] 1 2 get_outliers(x, type = \"para\") # parametric #> [1]  1  2 29 30 #> attr(,\"mu\") #> [1] 14.66106 #> attr(,\"sigma\") #> [1] 2.237713 #> attr(,\"crit\") #> [1]  7.947922 21.374201"},{"path":"https://stufield.github.io/helpr/reference/give_praise.html","id":null,"dir":"Reference","previous_headings":"","what":"Praise User — give_praise","title":"Praise User — give_praise","text":"Part collaboration friendly users. Praise colleagues encouragement use code appropriately runs error free! dependency-free version praise package takes arguments. Output can suppressed setting \"signal.quiet\" option (see example).","code":""},{"path":"https://stufield.github.io/helpr/reference/give_praise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Praise User — give_praise","text":"","code":"give_praise()"},{"path":"https://stufield.github.io/helpr/reference/give_praise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Praise User — give_praise","text":"","code":"# random praise 1 give_praise() #> Wow! You are Astounding!  # random praise 2 give_praise() #> Yeah! You are Astounding!  # suppress praise withr::with_options(list(signal.quiet = TRUE), give_praise())"},{"path":"https://stufield.github.io/helpr/reference/grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Special Infix Operators — grapes","title":"Special Infix Operators — grapes","text":"series useful infix operators, aka \"grapes\", can used facilitate core functionality, test equality, perform set operations, etc.","code":""},{"path":"https://stufield.github.io/helpr/reference/grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special Infix Operators — grapes","text":"","code":"x %@@% y  x %@@% y <- value  x %==% y  x %!=% y  x %===% y  x %set% y  x %!set% y  x %[[% y"},{"path":"https://stufield.github.io/helpr/reference/grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special Infix Operators — grapes","text":"x left hand side infix operator. y right hand side infix operator. value New value attribute y.","code":""},{"path":"https://stufield.github.io/helpr/reference/grapes.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Special Infix Operators — grapes","text":"x %@@% y: friendly version attr(x, y) extract \"@ribute\" elements. y can unquoted. `%@@%`(x, y) <- value: Assign \"@ributes\" via infix operator. friendly version attr(x, y) <- value. y can unquoted. x %==% y: gentler logical test equality two objects. Attributes checked. Use %===% check attributes. x %!=% y: logical test two objects equal. x %===% y: Also tests attributes x y. x %set% y: Subset values x y. Alias x[x %% y]. Similar intersect(x, y) except names class x maintained. x %!set% y: Subset values x y. Alias x[!x %% y]. Similar setdiff(x, y) except names class x maintained. x %[[% y: Extracts ^th element n elements list data frame, returning either vector length n single row data frame n columns. efficient alias purrr::map_*(x, y).","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Special Infix Operators — grapes","text":"","code":"factor(1:3) %@@% levels #> [1] \"1\" \"2\" \"3\" factor(1:3, levels = LETTERS[1:3L]) %@@% levels #> [1] \"A\" \"B\" \"C\"  mtcars %==% mtcars       # equal #> [1] TRUE cars2 <- mtcars cars2 %@@% a <- \"foo\"  # attr assignment; with unquoted 'a' mtcars %==% cars2        # attr not checked; TRUE #> [1] TRUE mtcars %===% cars2       # attr checked; FALSE #> [1] FALSE  x <- list(a = \"b\", c = \"d\", e = \"f\") x %set% c(\"a\", \"c\", \"d\")   # 'c' match #> $c #> [1] \"d\" #>  x %!set% c(\"a\", \"c\", \"d\")  # 'b' match #> $a #> [1] \"b\" #>  #> $e #> [1] \"f\" #>  unlist(x) %!set% c(\"a\", \"c\", \"d\")   # 'c' match; vector-vector #>   a   e  #> \"b\" \"f\"   # extract elements of a list x <- list(a = 1:3, b = 4:6, c = 7:9) x %[[% 2L #> a b c  #> 2 5 8   data.frame(x) %[[% 2L     # data frame -> same as x[2L, ] #>   a b c #> 2 2 5 8"},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle and Capture Side Effects — handlers","title":"Handle and Capture Side Effects — handlers","text":"Wrappers capture side effects silence function output. can particularly useful instances know function may generate warning/error, want terminate higher-level processes. Downstream code can trap returned object accordingly output expected structure. Note be_hard() simple drop-replacement purrr::partial() support quasi-quotation, sufficient replacement cases.","code":""},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle and Capture Side Effects — handlers","text":"","code":"be_safe(.f, otherwise = NULL)  be_quiet(.f)  be_hard(.f, ...)"},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle and Capture Side Effects — handlers","text":".f function capture handle user controlled manner. otherwise value result event error. ... Named arguments hard-coded key-value pairs.","code":""},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle and Capture Side Effects — handlers","text":"be_safe(): list containing: result: NULL error, see error. error: NULL errors encountered, see result. be_quiet(): list containing: result: result evaluated expression. output: output captured evaluation. warnings: warnings encountered evaluation. messages: messages triggered evaluation. be_hard(): function new hard-coded arguments.","code":""},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Handle and Capture Side Effects — handlers","text":"be_safe(): Roll stop() usethis::ui_stop() conditions. be_quiet(): quiet! ... always contains result. be_hard(): hard! ... coded specified arguments.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/handlers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle and Capture Side Effects — handlers","text":"","code":"# be safe safelog <- be_safe(log2) safelog(\"a\") #> $result #> NULL #>  #> $error #> [1] \"non-numeric argument to mathematical function\" #>  safelog(\"foo\" + 10) #> $result #> NULL #>  #> $error #> [1] \"non-numeric argument to binary operator\" #>  safelog(32) #> $result #> [1] 5 #>  #> $error #> NULL #>   # be quiet # create a chatty function: f <- function(x) {   message(\"This is a message.\")   message(\"This is a second message.\")   warning(\"This is a warning!\")   warning(\"This is a second warning!\")   cat(\"Multiplying pi * x^2:\\n\")   pi * x^2 } f2 <- be_quiet(f) f2(5) #> $result #> [1] 78.53982 #>  #> $output #> [1] \"Multiplying pi * x^2:\" #>  #> $warnings #> [1] \"This is a warning!\"        \"This is a second warning!\" #>  #> $messages #> [1] \"This is a message.\\n\"        \"This is a second message.\\n\" #>   # be hard-coded vec <- rnorm(50) navec <- c(NA_real_, vec) q2 <- be_hard(quantile, probs = c(0.025, 0.975), na.rm = TRUE)  # `be_hard` has a special S3 print method q2 #> Hard-coded function: quantile() #>  arg   value        #>  probs 0.025, 0.975 #>  na.rm TRUE          quantile(vec, probs = c(0.025, 0.975)) #>      2.5%     97.5%  #> -2.044360  2.287598   q2(vec) #>      2.5%     97.5%  #> -2.044360  2.287598   quantile(navec, probs = c(0.025, 0.975), na.rm = TRUE) #>      2.5%     97.5%  #> -2.044360  2.287598   q2(navec) #>      2.5%     97.5%  #> -2.044360  2.287598"},{"path":"https://stufield.github.io/helpr/reference/helpr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"helpr: Helper Utilities for R — helpr-package","title":"helpr: Helper Utilities for R — helpr-package","text":"helpr package contains numerous helpers, wrappers, utilities used throughout analysis suite. intentionally favors base R higher level *tidyverse* minimize imports.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/helpr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"helpr: Helper Utilities for R — helpr-package","text":"Maintainer: Stu Field stu.g.field@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Jagged Tibble — jagged_tbl","title":"Create a Jagged Tibble — jagged_tbl","text":"Combine list uneven (jagged) vectors one 2-dim object, tibble data frame, fill lengths NA.","code":""},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Jagged Tibble — jagged_tbl","text":"","code":"jagged_tbl(x)"},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Jagged Tibble — jagged_tbl","text":"x named list vectors unequal lengths, recast tibble.","code":""},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Jagged Tibble — jagged_tbl","text":"tibble object dimensions c(max(lengths(x)), length(x)). Extra entries replaced NA.","code":""},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Jagged Tibble — jagged_tbl","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/jagged_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Jagged Tibble — jagged_tbl","text":"","code":"p <- 5   # cols n <- 10  # rows x <- replicate(p, sample(1:1000, sample(1:n, 1))) |>   set_Names(paste0(\"v\", seq(p)))  tbl <- jagged_tbl(x) tbl #> # A tibble: 9 × 5 #>      v1    v2    v3    v4    v5 #>   <int> <int> <int> <int> <int> #> 1   353   381   499   162   939 #> 2   891   586   208   499   656 #> 3    55    38   672   414   848 #> 4   869   578  1000   223   353 #> 5   270   710   297    30   240 #> 6    68   912   552    NA   591 #> 7    NA     8   256    NA    57 #> 8    NA    NA    48    NA   271 #> 9    NA    NA   194    NA    NA"},{"path":"https://stufield.github.io/helpr/reference/lib_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate and Deactivate Lib Mode — lib_mode","title":"Activate and Deactivate Lib Mode — lib_mode","text":"activated, lib_mode() adds new library location (aka lib.loc) top library tree. allows run code \"sandbox\", without interfering packages installed previously. See vignette(\"lib-mode\") details examples.","code":""},{"path":"https://stufield.github.io/helpr/reference/lib_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate and Deactivate Lib Mode — lib_mode","text":"","code":"lib_mode(path = getOption(\"helpr_path\"))  lib_tree()  is_lib_mode()"},{"path":"https://stufield.github.io/helpr/reference/lib_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate and Deactivate Lib Mode — lib_mode","text":"path directory location R library.","code":""},{"path":"https://stufield.github.io/helpr/reference/lib_mode.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Activate and Deactivate Lib Mode — lib_mode","text":"lib_tree(): thin wrapper around .libPaths() quickly easily view current library tree directories session knows . is_lib_mode(): Determines whether session currently \"lib mode\".","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/lib_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate and Deactivate Lib Mode — lib_mode","text":"","code":"if (FALSE) { # \\dontrun{   dir.create(\"new-lib\")   lib_mode(\"new-lib\")  # ON; activate   lib_mode(\"new-lib\")  # OFF; deactivate   lib_mode(\"new-lib\")  # ON; re-activate } # }"},{"path":"https://stufield.github.io/helpr/reference/liter.html","id":null,"dir":"Reference","previous_headings":"","what":"List Iteration — liter","title":"List Iteration — liter","text":"thin wrapper around mapply() iterates paired .x .y values. must length elements can R object iterate . Similar purrr::map2() without load purrr namespace. .y missing .x named, equal liter(.x, names(.x), ...), behavior purrr::imap().","code":""},{"path":"https://stufield.github.io/helpr/reference/liter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Iteration — liter","text":"","code":"liter(.x, .y = NULL, .f, ...)"},{"path":"https://stufield.github.io/helpr/reference/liter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Iteration — liter","text":".x, .y Vectors objects length. .f function applied element x. ... Additional arguments passed .f.","code":""},{"path":"https://stufield.github.io/helpr/reference/liter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Iteration — liter","text":"Always returns list. returned list named names .x .x possible.","code":""},{"path":"https://stufield.github.io/helpr/reference/liter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Iteration — liter","text":"","code":"x <- LETTERS names(x) <- letters liter(x, 1:26, paste, sep = \"-\") |> head() #> $a #> [1] \"A-1\" #>  #> $b #> [1] \"B-2\" #>  #> $c #> [1] \"C-3\" #>  #> $d #> [1] \"D-4\" #>  #> $e #> [1] \"E-5\" #>  #> $f #> [1] \"F-6\" #>   # .y = NULL; uses names(.x) liter(x, .f = paste, sep = \"-\") |> head() #> $a #> [1] \"A-a\" #>  #> $b #> [1] \"B-b\" #>  #> $c #> [1] \"C-c\" #>  #> $d #> [1] \"D-d\" #>  #> $e #> [1] \"E-e\" #>  #> $f #> [1] \"F-f\" #>   # .y = index 1:3 liter(c(\"a\", \"b\" , \"c\"), .f = paste, sep = \"=\") #> $a #> [1] \"a=1\" #>  #> $b #> [1] \"b=2\" #>  #> $c #> [1] \"c=3\" #>   # anonymous on-the-fly .f() liter(1:6, rnorm(6), function(.x, .y) .x + .y^2) |> unlist() #> [1] 2.826384 2.554409 3.024208 4.555978 5.000322 6.000469"},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":null,"dir":"Reference","previous_headings":"","what":"Logical Testing — logicals","title":"Logical Testing — logicals","text":"functional checks return boolean TRUE/FALSE depending result test.","code":""},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logical Testing — logicals","text":"","code":"is_int_vec(x)  is_logspace(x)  is_monotonic(x)  has_length(x)  len_one(x)  is_chr(x)  is_dbl(x)  is_lgl(x)  is_int(x)"},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logical Testing — logicals","text":"x vector, data frame tibble tested.","code":""},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logical Testing — logicals","text":"Logical/boolean","code":""},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Logical Testing — logicals","text":"is_int_vec(): general test whether numeric vector object contains integer values. fix generally undesired behavior .integer() actually test integer numbers (see ?help). is_logspace(): Checks object containing numeric data already log space. check assumes proteomic measurements vector median, entire data matrix, greater 15 linear space less 10 log10-transformed. is_monotonic(): general test whether numeric vector x monotonically increasing decreasing value. has_length(): check length > 0. len_one(): check length = 1. is_chr(): check scalar + character type. is_dbl(): check scalar + double type. is_lgl(): check scalar + logical type. is_int(): check scalar + integer type.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logical Testing — logicals","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/logicals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logical Testing — logicals","text":"","code":"is_int_vec(10)         # does not return TRUE #> [1] TRUE is_int_vec(10L)        # does not return TRUE #> [1] TRUE is_int_vec(10) #> [1] TRUE is_int_vec(1:10) #> [1] TRUE is_int_vec(c(3.2, 1:10)) #> [1] FALSE is_int_vec(rnorm(10)) #> [1] FALSE  # log-space x <- rnorm(30, mean = 1000) is_logspace(x) #> [1] FALSE is_logspace(log(x)) #> [1] TRUE  df <- data.frame(a = 1:5, ft_1234 = round(rnorm(5, mean = 5000, sd = 100), 1)) is_logspace(df) #> [1] FALSE df <- data.frame(a = 1:5, ft_3456 = round(rnorm(5, mean = 3, sd = 1), 1)) is_logspace(df) #> [1] TRUE  # monotonic is_monotonic(1:10)      # TRUE #> [1] TRUE is_monotonic(10:1)      # TRUE #> [1] TRUE is_monotonic(rnorm(10)) # FALSE #> [1] FALSE is_monotonic(seq(10, -10, by = -1)) # TRUE #> [1] TRUE"},{"path":"https://stufield.github.io/helpr/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logit and Expit Transformations — logit","title":"Logit and Expit Transformations — logit","text":"logit() computes binary logit function. simple wrapper stats::qlogis() default input arguments. expit() computes logistic function. simple wrapper stats::plogis() default input arguments.","code":""},{"path":"https://stufield.github.io/helpr/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logit and Expit Transformations — logit","text":"","code":"logit(x)  expit(x)"},{"path":"https://stufield.github.io/helpr/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logit and Expit Transformations — logit","text":"x numeric(n).","code":""},{"path":"https://stufield.github.io/helpr/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logit and Expit Transformations — logit","text":"numeric(n) corresponding transformed x.","code":""},{"path":"https://stufield.github.io/helpr/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logit and Expit Transformations — logit","text":"","code":"x <- stats::runif(n = 100L) logit(x) #>   [1]  0.499616647  0.222215872  3.206188606  2.384526260  0.419132311 #>   [6] -0.792863709  0.221509802  2.709719579 -0.553567354 -0.669395114 #>  [11]  1.206525292 -0.840914083  0.530676818  1.401991539  0.169345807 #>  [16]  0.536498772 -1.451382622 -1.364853028  2.561634588 -0.349748316 #>  [21] -1.892410368 -2.731099366  2.051250092  0.373102779  0.956458537 #>  [26]  0.049582150 -0.866089472  0.574401026  2.016739334  2.866213050 #>  [31]  0.892552686  2.492588015 -4.105057499 -1.575186380 -1.301041632 #>  [36]  1.696791254 -1.134553697  0.060219609  1.842020477 -3.163601445 #>  [41] -0.160229022 -1.614210594  2.381224660 -0.366347769  0.577674696 #>  [46] -1.622804834 -1.509720990  5.638018577  0.597617075  2.416786278 #>  [51]  1.355733750  2.352050632 -0.444960649 -0.586664696  0.465683658 #>  [56] -1.434228138 -2.558785246 -0.817790215 -1.553534622  2.068073280 #>  [61] -0.008607154  0.818454108  1.938761579 -3.994321971 -0.481122684 #>  [66]  0.054385499 -3.004507385  1.405752330  0.549790283  1.215826256 #>  [71]  0.007055000  0.901651476 -2.290672822 -2.133229708 -1.237256562 #>  [76] -0.332372155 -0.645461223  0.682094271 -0.227521754 -0.818022627 #>  [81] -0.997943191 -0.992459294 -2.223162878  4.827864146 -2.147911586 #>  [86] -0.263561314  0.775398647 -0.708992392 -0.407370927  0.843284611 #>  [91] -1.138896031 -3.564373097 -2.585307333 -3.718153256 -1.345536215 #>  [96]  0.842000234  3.964918476  1.275317046  0.428328972 -1.334829022  x <- stats::rnorm(n = 100L) expit(x) #>   [1] 0.67220730 0.67037577 0.08422289 0.80285992 0.44778835 0.27086282 #>   [7] 0.87674563 0.64429293 0.43003811 0.36151700 0.48373187 0.27672924 #>  [13] 0.76309071 0.50466473 0.86490666 0.24727768 0.43714232 0.19844013 #>  [19] 0.34997444 0.56545077 0.19717980 0.69503211 0.47875879 0.65687092 #>  [25] 0.73330410 0.83616052 0.70167462 0.42509901 0.40233219 0.56291118 #>  [31] 0.47880150 0.65607527 0.19952215 0.81513553 0.48384594 0.30889985 #>  [37] 0.12621082 0.52119832 0.62641703 0.80435700 0.59800028 0.59148417 #>  [43] 0.85058998 0.33591770 0.24740875 0.37707682 0.38806429 0.27787346 #>  [49] 0.41390425 0.55606917 0.35546083 0.79663048 0.85147011 0.45652341 #>  [55] 0.73172590 0.38093061 0.37147765 0.46592229 0.74777098 0.41535921 #>  [61] 0.85493609 0.45718300 0.29424395 0.29109899 0.24683678 0.40104008 #>  [67] 0.55970473 0.65893331 0.70091548 0.34773503 0.31119260 0.40041903 #>  [73] 0.78607232 0.77025160 0.90784389 0.66893335 0.35345974 0.73618781 #>  [79] 0.62420125 0.29399052 0.32913709 0.35321616 0.58219920 0.40511532 #>  [85] 0.86609034 0.51404752 0.08506075 0.48507245 0.60441016 0.80499353 #>  [91] 0.82009260 0.72164714 0.37546645 0.28261653 0.29027780 0.66861990 #>  [97] 0.42664754 0.58688937 0.73818406 0.57053062"},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"Estimates parameters 2 distribution mixture model via expectation maximization. S3 plot method \"mix_k2\" objects.","code":""},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"","code":"normal_k2_mixture(   data,   pars = list(start_mu = NULL, start_sd = NULL, start_pi = NULL),   max_iter = 1000,   max_restarts = 25,   eps = 1e-08 )  # S3 method for class 'mix_k2' plot(x, type = c(\"density\", \"likelihood\", \"posterior\"), title = NULL, ...)"},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"data numeric(n). pars Initial values start_mu, start_sd, start_pi. max_iter integer(1). Max number iterations perform. max_restarts integer(1). Max number restarts perform. eps double(1). Machine precision stop algorithm. x mix_k2 object generated normal_k2_mixture. type character(1). Matched string one : \"density\", \"likelihood\" \"posterior\". title character(1). Title plot. ... Additional parameters extensibility.","code":""},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"mix_k2 class object.","code":""},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"Tibshirani Hastie See Tibshirani Hastie (\"bible\"); pg. 273.","code":""},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/normal_k2_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2-distribution (k2) Gaussian Mixture Model — normal_k2_mixture","text":"","code":"# Generate 2 gaussian distributions x <- withr::with_seed(101,   c(rnorm(100, mean = 10, sd = 1), rnorm(100, mean = 2, sd = 2))) mix_theta <- normal_k2_mixture(x) #> ✓ Iteration ... 23 mix_theta #> ══ Mix Type: normal_k2_mixture ═══════════════════════════════════════════ #> • n               200 #> • iter            23 #> • mu              [1.941, 9.97] #> • sigma           [2.033, 0.924] #> • pi_hat          0.498 #> • lambda          [0.502, 0.498] #> • final loglik    -483.915 #> ══════════════════════════════════════════════════════════════════════════  plot(mix_theta)  plot(mix_theta, \"like\")  plot(mix_theta, \"post\")"},{"path":"https://stufield.github.io/helpr/reference/openR.html","id":null,"dir":"Reference","previous_headings":"","what":"Open File Interactively — openR","title":"Open File Interactively — openR","text":"Opens text file RStudio interactive session. Must using RStudio interactively. Similar rstudioapi::navigateToFile() without added rstudioapi dependency.","code":""},{"path":"https://stufield.github.io/helpr/reference/openR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open File Interactively — openR","text":"","code":"openR(file)"},{"path":"https://stufield.github.io/helpr/reference/openR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open File Interactively — openR","text":"file path file.","code":""},{"path":"https://stufield.github.io/helpr/reference/openR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open File Interactively — openR","text":"file path, invisibly.","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"Calculation diagnostic plots explain B-H FDR procedure works via Benjamini-Hochberg \"step-\" correction. FDR corrected p-values calculated scratch reported elements/steps procedure.","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"","code":"p_value_FDR(p, alpha = 0.05)  # S3 method for class 'fdr' plot(x, ...)"},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"p numeric vector p-values. alpha numeric(1). Significance level [0, 1]. x fdr object. ... Unused. compliance plot() generic default params.","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"fdr object. tibble step-procedure. tibble contains: p.value sorted vector original p-values. penalty (k/m) threshold value, corresponding k / m (slope). threshold threshold value, corresponding alpha * k / m. p_hat Term minimum function corresponding p * m / k. fdr FDR-adjusted p-values. idx indices original p-values. fdr_p FDR-adjusted p-values ordered idx. alpha chosen significance threshold.","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"basically solving slope (k/m) makes p-value (alpha) significant.","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"Benjamini, Y., Hochberg, Y. (1995). Controlling false discovery rate: practical powerful approach multiple testing. Journal Royal Statistical Society Series B 57, 289-300. https://en.wikipedia.org/wiki/False_discovery_rate#Benjamini–Hochberg_procedure","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/p_value_FDR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Benjamini-Hochberg FDR Corrected Values — p_value_FDR","text":"","code":"p1  <- c(0.01, 0.013, 0.014, 0.19, 0.35, 0.5, 0.63, 0.67, 0.75, 0.81) new <- p_value_FDR(p1) new #> # A tibble: 10 × 8 #>    p_value `penalty (k/m)` threshold  p_hat    fdr   idx  fdr_p alpha #>  *   <dbl>           <dbl>     <dbl>  <dbl>  <dbl> <int>  <dbl> <chr> #>  1   0.01              0.1     0.005 0.1    0.0467     1 0.0467 sig.  #>  2   0.013             0.2     0.01  0.065  0.0467     2 0.0467 sig.  #>  3   0.014             0.3     0.015 0.0467 0.0467     3 0.0467 sig.  #>  4   0.19              0.4     0.02  0.475  0.475      4 0.475  null  #>  5   0.35              0.5     0.025 0.7    0.7        5 0.7    null  #>  6   0.5               0.6     0.03  0.833  0.81       6 0.81   null  #>  7   0.63              0.7     0.035 0.9    0.81       7 0.81   null  #>  8   0.67              0.8     0.04  0.838  0.81       8 0.81   null  #>  9   0.75              0.9     0.045 0.833  0.81       9 0.81   null  #> 10   0.81              1       0.05  0.81   0.81      10 0.81   null   old <- p.adjust(p1, method = \"fdr\") all.equal(new$fdr_p, old) #> [1] TRUE  plot(new)   p2 <- withr::with_seed(1001, runif(10, 0.0005, 0.3)) p_value_FDR(p2) #> # A tibble: 10 × 8 #>    p_value `penalty (k/m)` threshold  p_hat    fdr   idx  fdr_p alpha #>  *   <dbl>           <dbl>     <dbl>  <dbl>  <dbl> <int>  <dbl> <chr> #>  1 0.00233             0.1     0.005 0.0233 0.0233     7 0.184  sig.  #>  2 0.0248              0.2     0.01  0.124  0.124      8 0.287  null  #>  3 0.0870              0.3     0.015 0.290  0.184      9 0.296  null  #>  4 0.124               0.4     0.02  0.310  0.184      2 0.124  null  #>  5 0.126               0.5     0.025 0.252  0.184      4 0.184  null  #>  6 0.128               0.6     0.03  0.214  0.184      5 0.184  null  #>  7 0.129               0.7     0.035 0.184  0.184      3 0.184  null  #>  8 0.230               0.8     0.04  0.287  0.287     10 0.296  null  #>  9 0.266               0.9     0.045 0.296  0.296      6 0.184  null  #> 10 0.296               1       0.05  0.296  0.296      1 0.0233 null   p3 <- withr::with_seed(669, c(runif(10), rep(0.5, 10))) p_value_FDR(p3) #> # A tibble: 20 × 8 #>    p_value `penalty (k/m)` threshold p_hat   fdr   idx fdr_p alpha #>  *   <dbl>           <dbl>     <dbl> <dbl> <dbl> <int> <dbl> <chr> #>  1  0.0616            0.05    0.0025 1     0.526     1 0.526 null  #>  2  0.0727            0.1     0.005  0.727 0.526     9 0.526 null  #>  3  0.246             0.15    0.0075 1     0.526     8 0.526 null  #>  4  0.247             0.2     0.01   1     0.526     4 0.526 null  #>  5  0.274             0.25    0.0125 1     0.526     5 0.526 null  #>  6  0.350             0.3     0.015  1     0.526    10 0.526 null  #>  7  0.421             0.35    0.0175 1     0.526     6 0.526 null  #>  8  0.446             0.4     0.02   1     0.526     2 0.526 null  #>  9  0.461             0.45    0.0225 1     0.526     7 0.526 null  #> 10  0.5               0.5     0.025  1     0.526    11 0.526 null  #> 11  0.5               0.55    0.0275 0.909 0.526    12 0.526 null  #> 12  0.5               0.6     0.03   0.833 0.526    13 0.526 null  #> 13  0.5               0.65    0.0325 0.769 0.526    14 0.526 null  #> 14  0.5               0.7     0.035  0.714 0.526    15 0.526 null  #> 15  0.5               0.75    0.0375 0.667 0.526    16 0.526 null  #> 16  0.5               0.8     0.04   0.625 0.526    17 0.526 null  #> 17  0.5               0.85    0.0425 0.588 0.526    18 0.526 null  #> 18  0.5               0.9     0.045  0.556 0.526    19 0.526 null  #> 19  0.5               0.95    0.0475 0.526 0.526    20 0.727 null  #> 20  0.727             1       0.05   0.727 0.727     3 0.526 null   p4 <- withr::with_seed(101, c(runif(200), runif(25, 0.01, 0.1))) p_value_FDR(p4) #> # A tibble: 225 × 8 #>    p_value `penalty (k/m)` threshold p_hat   fdr   idx fdr_p alpha #>  *   <dbl>           <dbl>     <dbl> <dbl> <dbl> <int> <dbl> <chr> #>  1 0.00859         0.00444  0.000222 1     0.421   186 0.994 null  #>  2 0.0102          0.00889  0.000444 1     0.421    85 0.827 null  #>  3 0.0113          0.0133   0.000667 0.848 0.421   215 0.994 null  #>  4 0.0136          0.0178   0.000889 0.767 0.421   220 0.999 null  #>  5 0.0165          0.0222   0.00111  0.742 0.421   192 0.994 null  #>  6 0.0183          0.0267   0.00133  0.687 0.421    90 0.827 null  #>  7 0.0189          0.0311   0.00156  0.606 0.421   206 0.994 null  #>  8 0.0191          0.0356   0.00178  0.537 0.421    67 0.747 null  #>  9 0.0202          0.04     0.002    0.504 0.421    39 0.435 null  #> 10 0.0233          0.0444   0.00222  0.525 0.421   102 0.907 null  #> # ℹ 215 more rows"},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":null,"dir":"Reference","previous_headings":"","what":"All Values Same — rep_lgl","title":"All Values Same — rep_lgl","text":"Returns boolean testing values vector identical. function compare two independent vectors. Use isTRUE(.equal()) comparisons.","code":""},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All Values Same — rep_lgl","text":"","code":"rep_lgl(x)"},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All Values Same — rep_lgl","text":"x vector values. Can one : numeric, character, factor, logical. vector type double NA values present, first removed.","code":""},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All Values Same — rep_lgl","text":"logical(1).","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"All Values Same — rep_lgl","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/rep_lgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All Values Same — rep_lgl","text":"","code":"rep_lgl(1:4) #> [1] FALSE  rep_lgl(rep(5, 10)) #> [1] TRUE  rep_lgl(rep(\"A\", 10)) #> [1] TRUE  rep_lgl(letters) #> [1] FALSE  rep_lgl(c(TRUE, TRUE, TRUE)) #> [1] TRUE  rep_lgl(c(TRUE, TRUE, FALSE)) #> [1] FALSE"},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for Working With Row Names — rownames","title":"Helpers for Working With Row Names — rownames","text":"Easily move row names column vice-versa without unwanted side-effects object class attributes. Drop-replacement tibble::rownames_to_column() tibble::column_to_rownames() can undesired side-effects complex object attributes. import external packages, modify environment, change object (desired column). using col2rn(), explicit row names exist, overwritten warning. add_rowid() affect row names, differs tibble::rowid_to_column().","code":""},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for Working With Row Names — rownames","text":"","code":"rn2col(data, name = \".rn\")  col2rn(data, name = \".rn\")  has_rn(data)  rm_rn(data)  set_rn(data, value)  add_rowid(data, name = \".rowid\")"},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for Working With Row Names — rownames","text":"data object inherits class data.frame. name character(1). name column move. value character(n). new set names data frame. duplicates exist modified --fly via make.unique().","code":""},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helpers for Working With Row Names — rownames","text":"functions attempt return object class input fully intact unmodified attributes (aside required desired action). has_rn() returns scalar logical.","code":""},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Helpers for Working With Row Names — rownames","text":"rn2col(): moves row names data explicit column whether explicit implicit. col2rn(): inverse rn2col(). row names exist, overwritten (warning). has_rn(): returns boolean indicating whether data frame explicit row names assigned. rm_rn(): removes existing row names, leaving \"implicit\" row names. set_rn(): sets (overwrites) existing row names data frames . add_rowid(): adds sequential integer row identifier; starting 1:nrow(data). remove existing row names currently, may future (please code accordingly).","code":""},{"path":"https://stufield.github.io/helpr/reference/rownames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpers for Working With Row Names — rownames","text":"","code":"df <- data.frame(a = 1:5, b = rnorm(5), row.names = LETTERS[1:5]) df #>   a          b #> A 1 -0.5793881 #> B 2  0.9421994 #> C 3 -0.7063614 #> D 4 -1.2754021 #> E 5  0.7332599 rn2col(df)              # default name is `.rn` #>   .rn a          b #> 1   A 1 -0.5793881 #> 2   B 2  0.9421994 #> 3   C 3 -0.7063614 #> 4   D 4 -1.2754021 #> 5   E 5  0.7332599 rn2col(df, \"feature\")   # pass `name =` #>   feature a          b #> 1       A 1 -0.5793881 #> 2       B 2  0.9421994 #> 3       C 3 -0.7063614 #> 4       D 4 -1.2754021 #> 5       E 5  0.7332599  # moving columns df$mtcars <- sample(names(mtcars), 5) col2rn(df, \"mtcars\")   # with a warning #> Warning: `df` already has row names. They will be over-written. #>      a          b #> mpg  1 -0.5793881 #> hp   2  0.9421994 #> carb 3 -0.7063614 #> cyl  4 -1.2754021 #> drat 5  0.7332599  # Move back and forth easily # Leaves original object un-modified identical(df, col2rn(rn2col(df))) #> [1] TRUE  # add \"id\" column add_rowid(mtcars) #>                     .rowid  mpg cyl  disp  hp drat    wt  qsec vs am gear #> Mazda RX4                1 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4 #> Mazda RX4 Wag            2 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4 #> Datsun 710               3 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4 #> Hornet 4 Drive           4 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3 #> Hornet Sportabout        5 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3 #> Valiant                  6 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3 #> Duster 360               7 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3 #> Merc 240D                8 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4 #> Merc 230                 9 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4 #> Merc 280                10 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4 #> Merc 280C               11 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4 #> Merc 450SE              12 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3 #> Merc 450SL              13 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3 #> Merc 450SLC             14 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3 #> Cadillac Fleetwood      15 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3 #> Lincoln Continental     16 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3 #> Chrysler Imperial       17 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3 #> Fiat 128                18 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4 #> Honda Civic             19 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4 #> Toyota Corolla          20 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4 #> Toyota Corona           21 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3 #> Dodge Challenger        22 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3 #> AMC Javelin             23 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3 #> Camaro Z28              24 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3 #> Pontiac Firebird        25 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3 #> Fiat X1-9               26 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4 #> Porsche 914-2           27 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5 #> Lotus Europa            28 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5 #> Ford Pantera L          29 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5 #> Ferrari Dino            30 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5 #> Maserati Bora           31 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5 #> Volvo 142E              32 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4 #>                     carb #> Mazda RX4              4 #> Mazda RX4 Wag          4 #> Datsun 710             1 #> Hornet 4 Drive         1 #> Hornet Sportabout      2 #> Valiant                1 #> Duster 360             4 #> Merc 240D              2 #> Merc 230               2 #> Merc 280               4 #> Merc 280C              4 #> Merc 450SE             3 #> Merc 450SL             3 #> Merc 450SLC            3 #> Cadillac Fleetwood     4 #> Lincoln Continental    4 #> Chrysler Imperial      4 #> Fiat 128               1 #> Honda Civic            2 #> Toyota Corolla         1 #> Toyota Corona          1 #> Dodge Challenger       2 #> AMC Javelin            2 #> Camaro Z28             4 #> Pontiac Firebird       2 #> Fiat X1-9              1 #> Porsche 914-2          2 #> Lotus Europa           2 #> Ford Pantera L         4 #> Ferrari Dino           6 #> Maserati Bora          8 #> Volvo 142E             2  # remove row names has_rn(mtcars) #> [1] TRUE mtcars2 <- rm_rn(mtcars) has_rn(mtcars2) #> [1] FALSE"},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Common S3 Generics — s3-generics","title":"Common S3 Generics — s3-generics","text":"S3 generic functions can used minimize package dependencies across multiple packages method.","code":""},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common S3 Generics — s3-generics","text":"","code":"fit(object, data, params, ...)  tune(model, ...)  get_pos_class(model, ...)  get_model_classes(model, ...)  get_model_features(model, ...)  get_model_coef(model, ...)  get_model_type(model, ...)  get_model_params(model, ...)  calc_model_metrics(model, data, ...)  cross_validate(model, data, k, ...)  calc_predictions(model, newdata, ...)"},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common S3 Generics — s3-generics","text":"data data assess model. params Model parameters. Optional depending model type. ... Used extensibility downstream S3 methods. model, object model object. k number folds perform (k-fold cross-validation). newdata test set (data.frame) containing (features) corresponding model parameters. models, newdata = NULL, training (--bag) predictions returned.","code":""},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Common S3 Generics — s3-generics","text":"fit(): S3 generic \"fit\" model. tune(): S3 generic \"tune\" model. get_pos_class(): binary classification model, determine positive class, .e. \"disease\" \"case\" class. get_model_classes(): binary classification model, determine classes model. get_model_features(): Returns character vector model predictors/covariates contained within model object. interrogating model object, function returns covariates (features) contained object, proteomic clinical meta data. get_model_coef(): Returns named numeric vector regression coefficients linear model contained within model object. get_model_type(): S3 generic determine model type, e.g. classification, regression, survival. get_model_params(): S3 generic determine model parameters. calc_model_metrics(): S3 generic calculate performance metrics model. cross_validate(): S3 generic perform k-fold cross-validation given model. calc_predictions(): Calculate predictions given model test set defined newdata. return object always data.frame class object 1 3 formats, depending model type, containing model predictions newdata. data frame named according :","code":""},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Common S3 Generics — s3-generics","text":"get_model_coef(): non-linear models linear predictor, thus return NULL. See specific S3 method ?get_model_coef.class details. calc_predictions(): classification models linear predictor, non-GLM model, e.g. random forest SVM, .","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/s3-generics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Common S3 Generics — s3-generics","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Compressed *.rds File — save_rds","title":"Save Compressed *.rds File — save_rds","text":"thin wrapper around saveRDS() ensures two things: path extension consistent lowercase *.rds compression used \"xz\", often optimal proteomic data","code":""},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Compressed *.rds File — save_rds","text":"","code":"save_rds(object, file)  save_rda(..., file)  get_compression(file)"},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Compressed *.rds File — save_rds","text":"object R object serialize. file connection name file R object     saved read . ... names objects saved (symbols     character strings).","code":""},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Compressed *.rds File — save_rds","text":"Returns file, invisibly.","code":""},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Save Compressed *.rds File — save_rds","text":"save_rda(): similar save_rds(), saving serialized *.rda compressed files. get_compression(): determine type compression serialized binary file.","code":""},{"path":"https://stufield.github.io/helpr/reference/save_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Compressed *.rds File — save_rds","text":"","code":"if (FALSE) { # \\dontrun{ # all are the same save_rds(x, \"outfile.rds\") save_rds(x, \"outfile.RDS\") save_rds(x, \"outfile.Rds\")  # similar functionality for rda # as with `save()`, must specify file argument explicitly save_rda(x, file = \"outfile.rda\")  # determine the compression ('xz') get_compression(\"outfile.rda\") } # }"},{"path":"https://stufield.github.io/helpr/reference/set_Names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Names of an Object — set_Names","title":"Set Names of an Object — set_Names","text":"Similar stats::setNames(), features. can specify names following ways: * character vector (recycled length(nms) != length(x)) * function applied names x * via ... passing function, c(nms, ...)","code":""},{"path":"https://stufield.github.io/helpr/reference/set_Names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Names of an Object — set_Names","text":"","code":"set_Names(x, nms = x, ...)"},{"path":"https://stufield.github.io/helpr/reference/set_Names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Names of an Object — set_Names","text":"x R object name. nms names apply x. empty, names \"self\" applied. Alternatively function applied names. ... Arguments passed nms function.","code":""},{"path":"https://stufield.github.io/helpr/reference/set_Names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Names of an Object — set_Names","text":"","code":"set_Names(head(letters), head(LETTERS)) # apply names #>   A   B   C   D   E   F  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"   set_Names(head(letters))                # names self #>   a   b   c   d   e   f  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"   set_Names(head(letters), toupper)       # apply fn #>   A   B   C   D   E   F  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"   set_Names(set_Names(head(letters)), NULL)     # NULL always removes names #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"  set_Names(head(letters), \"foo\")               # repeat to length #> foo foo foo foo foo foo  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"   set_Names(head(letters), c(\"foo\", \"bar\"))     # repeat to length #> foo bar foo bar foo bar  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\"   set_Names(head(letters), \"foo\", \"bar\", \"baz\") # repeat to length via `...` #> foo bar baz foo bar baz  #> \"a\" \"b\" \"c\" \"d\" \"e\" \"f\""},{"path":"https://stufield.github.io/helpr/reference/signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal Feedback to the Console UI — signal","title":"Signal Feedback to the Console UI — signal","text":"Similar usethis::ui_*() function suite require importing usethis, crayon, cli packages. signal_*() functions can silenced setting options(signal.quiet = TRUE).","code":""},{"path":"https://stufield.github.io/helpr/reference/signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal Feedback to the Console UI — signal","text":"","code":"value(x)  signal_done(...)  signal_todo(...)  signal_oops(...)  signal_info(...)  signal_rule(text = \"\", line_col = NULL, lty = c(\"single\", \"double\"))  add_color(x, col)  add_style  # S3 method for class 'helpr_style' print(x, ...)  # S3 method for class 'helpr_style' x$y  has_style(x)  rm_style(x)"},{"path":"https://stufield.github.io/helpr/reference/signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal Feedback to the Console UI — signal","text":"x Character. string report UI add style/color. ... Elements passed directly cat(). text character(1). String added left margin horizontal rule. line_col See col. lty character(1). Line type either \"single\" \"double\" (matched). col character(1). Color (style) text (line). Currently one : red green yellow blue magenta cyan black white grey bold italic underline inverse strikethrough y coloring function, .e. element add_style object, see col argument.","code":""},{"path":"https://stufield.github.io/helpr/reference/signal.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Signal Feedback to the Console UI — signal","text":"value(): Signal value UI. Similar usethis::ui_value(). element x becomes entry comma separated list blue color added. signal_done(): Signal completed task UI. Similar usethis::ui_done(). signal_todo(): Signal -task UI. Similar usethis::ui_todo(). signal_oops(): Signal oops error UI. Similar usethis::ui_oops(). signal_info(): Signal info UI. Similar usethis::ui_info(). signal_rule(): Make rule left aligned text. Similar cli::rule(). add_color(): Add color style string. Similar crayon::crayon(). add_style: alternative syntax. list object element color/style function wrapping around add_color() element determines col argument. See examples. print(helpr_style): Functions apply_style object class, allows special S3 print method chaining examples . $: Easily chain styles $ S3 method. has_style(): Logical testing string contains ANSI styles/colors. rm_style(): Remove color style character strings.","code":""},{"path":"https://stufield.github.io/helpr/reference/signal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signal Feedback to the Console UI — signal","text":"","code":"n <- 4 cat(\"You need this many bikes:\", value(n + 1)) #> You need this many bikes: 5  # value() collapses lengths by sep = \", \" value(names(mtcars)) #> 'mpg', 'cyl', 'disp', 'hp', 'drat', 'wt', 'qsec', 'vs', 'am', 'gear', 'carb'  # signal_done() signal_done(\"Tests have passed!\") #> ✓ Tests have passed!  # easily construct complex messages signal_done(\"The 'LETTERS' vector has\", value(length(LETTERS)), \"elements\") #> ✓ The 'LETTERS' vector has 26 elements  # add a horizontal rule signal_rule() #> ──────────────────────────────────────────────────────────────────────────  signal_rule(\"Header\", line_col = \"green\", lty = \"double\") #> ══ Header ════════════════════════════════════════════════════════════════  cat(add_color(\"Hello world!\", \"blue\")) #> Hello world!  # Combined with signal_*() functions signal_oops(\"You shall\", add_color(\"not\", \"red\"), \"pass!\") #> ✖ You shall not pass!  # colors and styles available via add_style() add_style #> $red #> megaverse styling function, red: example output. #>  #> $green #> megaverse styling function, green: example output. #>  #> $yellow #> megaverse styling function, yellow: example output. #>  #> $blue #> megaverse styling function, blue: example output. #>  #> $magenta #> megaverse styling function, magenta: example output. #>  #> $cyan #> megaverse styling function, cyan: example output. #>  #> $black #> megaverse styling function, black: example output. #>  #> $white #> megaverse styling function, white: example output. #>  #> $grey #> megaverse styling function, grey: example output. #>  #> $bold #> megaverse styling function, bold: example output. #>  #> $italic #> megaverse styling function, italic: example output. #>  #> $underline #> megaverse styling function, underline: example output. #>  #> $inverse #> megaverse styling function, inverse: example output. #>  #> $strikethrough #> megaverse styling function, strikethrough: example output. #>   # These are equivalent cat(add_style$blue(\"Hello world!\")) #> Hello world! cat(add_color(\"Hello world!\", \"blue\")) #> Hello world!  # Combine red <- add_style$red(\"This is red\") string <- c(red, \"and this is not\") cat(string) #> This is red and this is not  # Combine colors blue <- add_style$blue(\"blue\") red  <- add_style$red(\"red\") string <- add_style$bold(c(blue, red, \"nothing\")) cat(string) #> blue red nothing  # chain styles via `$` cat(add_style$bold(\"Success\")) #> Success cat(add_style$bold$green(\"Success\")) #> Success cat(add_style$bold$green$italic(\"Success\")) #> Success cat(add_style$bold$green$italic$red(\"Success\")) #> Success  # potential typos are trapped if (FALSE) { # \\dontrun{ cat(add_style$bold$greeen$italic(\"Success\")) } # }  # check for ANSI styling has_style(add_style$green(\"Hello world!\")) #> [1] TRUE has_style(add_style$italic(\"Hello world!\")) #> [1] TRUE  # remove ANSI styling cat(rm_style(add_style$green(\"Hello world!\"))) #> Hello world! cat(rm_style(add_style$italic$cyan(\"Hello world!\"))) #> Hello world!"},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Working with Strings — strings","title":"Working with Strings — strings","text":"Tools working character/text strings without importing stringr package.","code":""},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Working with Strings — strings","text":"","code":"pad(x, width, side = c(\"right\", \"left\", \"both\"))  squish(x)  trim(x, side = c(\"both\", \"left\", \"right\"), whitespace = \"[ \\t\\r\\n]\")  capture(text, pattern)"},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Working with Strings — strings","text":"x character vector. width integer(1). minimum width padding element. side character(1). Pad left right. whitespace string specifying regular expression match (one character ) \"white space\". text character vector matches sought. pattern character(1). string containing group capture regex.","code":""},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Working with Strings — strings","text":"pad(): Similar stringr::str_pad() uses blank space padding character. squish(): inverse pad(), removes whitespace sides replicated internal whitespace. Similar stringr::str_squish(). trim(): wrapper around trimws() unified argument names. capture(): Uses \"group capture\" regular expression pattern argument extract matches character string(s). Analogous stringr::str_extract().","code":""},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":"base-vs-stringr","dir":"Reference","previous_headings":"","what":"base vs stringr","title":"Working with Strings — strings","text":"convenient table stringr base R equivalents: found helpr:","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/strings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Working with Strings — strings","text":"","code":"pad(\"tidyverse\", 20) #> [1] \"tidyverse           \" pad(\"tidyverse\", 20, \"left\") #> [1] \"           tidyverse\" pad(\"tidyverse\", 20, \"both\") #> [1] \"     tidyverse      \"  squish(\"  abcd   efgh   \") #> [1] \"abcd efgh\" squish(\"  abcd   efgh   .\") #> [1] \"abcd efgh .\"  trim(\"  abcd   efgh   \") #> [1] \"abcd   efgh\" trim(\"  abcd   efgh   .\") #> [1] \"abcd   efgh   .\"  # extract the group 'oo' capture(c(\"foo\", \"bar\", \"boo\", \"oops\"), \"(oo)\") #>      1 #> 1   oo #> 2 <NA> #> 3   oo #> 4   oo  # capture multiple groups capture(c(\"foo\", \"bar\", \"boo\", \"oops-e-doo\"), \"(.*)(oo)\") #>          1    2 #> 1        f   oo #> 2     <NA> <NA> #> 3        b   oo #> 4 oops-e-d   oo"},{"path":"https://stufield.github.io/helpr/reference/symbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of UTF-8 or ASCII symbols. — symbl","title":"A list of UTF-8 or ASCII symbols. — symbl","text":"Similar cli package listing UTF-8/Unicode symbols ASCII fall-backs depending environment called . Can controlled option options(cli.unicode = T/F) set, otherwise l10n_info()$UTF-8 local information used detect UTF-8 support.","code":""},{"path":"https://stufield.github.io/helpr/reference/symbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of UTF-8 or ASCII symbols. — symbl","text":"","code":"symbl  show_symbols()"},{"path":"https://stufield.github.io/helpr/reference/symbl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of UTF-8 or ASCII symbols. — symbl","text":"named list, see names(symbl).","code":""},{"path":"https://stufield.github.io/helpr/reference/symbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list of UTF-8 or ASCII symbols. — symbl","text":"show_symbols() convenient print output list various available UTF-8 (ASCII) symbols screen.","code":""},{"path":"https://stufield.github.io/helpr/reference/symbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list of UTF-8 or ASCII symbols. — symbl","text":"","code":"# available symbols show_symbols() #> tick                 ✓  pointer              ❯  leq                  ≤   #> cross                ✖  info                 ℹ  times                ×   #> star                 ★  warning              ⚠  pm                   ±   #> square               ▇  menu                 ☰  upper_block_1        ▔   #> square_small         ◻  smiley               ☺  upper_block_4        ▀   #> square_small_filled  ◼  heart                ♥  lower_block_1        ▁   #> circle               ◯  arrow_up             ↑  lower_block_2        ▂   #> circle_filled        ◉  arrow_down           ↓  lower_block_3        ▃   #> circle_dotted        ◌  arrow_left           ←  lower_block_4        ▄   #> circle_double        ◎  arrow_right          →  lower_block_5        ▅   #> circle_circle        ⓞ  radio_on             ◉  lower_block_6        ▆   #> circle_cross         ⓧ  radio_off            ◯  lower_block_7        ▇   #> circle_pipe          Ⓘ  checkbox_on          ☒  lower_block_8        █   #> bullet               •  checkbox_off         ☐  full_block           █   #> dot                  ․  checkbox_circle_on   ⓧ  mustache             ෴   #> line                 ─  checkbox_circle_off  Ⓘ  fancy_question_mark ❓   #> double_line          ═  neq                  ≠     #> ellipsis             …  geq                  ≥      # ascii versions withr::with_options(list(cli.unicode = FALSE, width = 80L), show_symbols()) #> tick                    v  arrow_up                ^  sup_0                   0   #> cross                   x  arrow_down              v  sup_1                   1   #> star                    *  arrow_left              <  sup_2                   2   #> square                [ ]  arrow_right             >  sup_3                   3   #> square_small          [ ]  radio_on              (*)  sup_4                   4   #> square_small_filled   [x]  radio_off             ( )  sup_5                   5   #> circle                ( )  checkbox_on           [x]  sup_6                   6   #> circle_filled         (*)  checkbox_off          [ ]  sup_7                   7   #> circle_dotted         ( )  checkbox_circle_on    (x)  sup_8                   8   #> circle_double         (o)  checkbox_circle_off   ( )  sup_9                   9   #> circle_circle         (o)  neq                    !=  sup_minus               -   #> circle_cross          (x)  geq                    >=  sup_plus                +   #> circle_pipe           (|)  leq                    <=  play                    >   #> circle_question_mark  (?)  times                   x  stop                    #   #> bullet                  *  pm                    +/-  record                  o   #> dot                     .  upper_block_1           ^  figure_dash             -   #> line                    -  upper_block_4           ^  en_dash                --   #> double_line             =  lower_block_1           .  em_dash               ---   #> ellipsis              ...  lower_block_2           _  dquote_left             \"   #> continue                ~  lower_block_3           _  dquote_right            \"   #> pointer                 >  lower_block_4           =  squote_left             '   #> info                    i  lower_block_5           =  squote_right            '   #> warning                 !  lower_block_6           *  mustache             /\\\\/   #> menu                    =  lower_block_7           #  fancy_question_mark   (?)   #> smiley                 :)  lower_block_8           #     #> heart                  <3  full_block              #"},{"path":"https://stufield.github.io/helpr/reference/unit-help.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Test Helpers — expect_error_free","title":"Unit Test Helpers — expect_error_free","text":"Manage whether certain tests skipped devtools::check(), devtools::test(), temporary automated pipeline builds. may desired certain tests time consuming special environment characteristics make undesirable. See testthat::skip_if() testthat::skip_on_cran() details.","code":""},{"path":"https://stufield.github.io/helpr/reference/unit-help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Test Helpers — expect_error_free","text":"","code":"expect_error_free(...)  skip_on_check()  skip_on_test()  expect_snapshot_plot(code, name, type = c(\"png\", \"pdf\"), ...)"},{"path":"https://stufield.github.io/helpr/reference/unit-help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Test Helpers — expect_error_free","text":"... Arguments passed testthat::expect_no_error() logical gg = param expect_snapshot_plot(). code code execute. name character(1). temporary file name use test. type character(1). Either \"png\" \"pdf\".","code":""},{"path":"https://stufield.github.io/helpr/reference/unit-help.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unit Test Helpers — expect_error_free","text":"https://testthat.r-lib.org/reference/expect_snapshot_file.html","code":""},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Write List to CSV File — write_list","title":"Write List to CSV File — write_list","text":"Write list data frames vectors (mixture ) single *.csv file.","code":""},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write List to CSV File — write_list","text":"","code":"write_list(x, file, rn_title = NULL, append = FALSE, ...)"},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write List to CSV File — write_list","text":"x list written file, typically list data frames. file either character string naming file connection     open writing.  \"\" indicates output console. rn_title title row names column (data frames). Must match length x argument. append logical. relevant file character     string.  TRUE, output appended     file.  FALSE, existing file name destroyed. ... Additional arguments passed write.table().","code":""},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write List to CSV File — write_list","text":"file, invisibly.","code":""},{"path":[]},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write List to CSV File — write_list","text":"Stu Field","code":""},{"path":"https://stufield.github.io/helpr/reference/write_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write List to CSV File — write_list","text":"","code":"tmp <- lapply(LETTERS[1:5], function(x) rnorm(10, mean = 10, sd = 3)) names(tmp) <- LETTERS[1:5] write_list(tmp, file = tempfile(fileext = \".csv\")) #> ✓ Writing 'tmp' to: '/var/folders/0w/4z5l9vds32nbkz7l22n8j6s80000gn/T//RtmpsrWj8Y/file11bb512693f9.csv'  # with a data frame in list tmp$mtcars <- head(mtcars, 10) write_list(tmp, file = tempfile(fileext = \".csv\")) #> ✓ Writing 'tmp' to: '/var/folders/0w/4z5l9vds32nbkz7l22n8j6s80000gn/T//RtmpsrWj8Y/file11bb3bbcea0e.csv'"},{"path":"https://stufield.github.io/helpr/reference/write_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to a Text File — write_text","title":"Write to a Text File — write_text","text":"Writes UTF-8 encoding \\n line endings UNIX systems \\r\\n Windows. avoids unintended side-effects usethis::write_over() R-projects.","code":""},{"path":"https://stufield.github.io/helpr/reference/write_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to a Text File — write_text","text":"","code":"write_text(path, lines, overwrite = FALSE)  read_text(path, n = -1L)"},{"path":"https://stufield.github.io/helpr/reference/write_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to a Text File — write_text","text":"path Path target file. created exist, parent directory must exist. lines Character vector lines. write_union(), lines add target file, already present. write_over(), exact lines desired target file. overwrite logical(1). file exists, -write ? n integer.  (maximal) number lines     read.  Negative values indicate one read end     input connection.","code":""},{"path":"https://stufield.github.io/helpr/reference/write_text.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Write to a Text File — write_text","text":"read_text(): convenient wrapper readLines() default UTF-8 encoding reading text R session.","code":""},{"path":"https://stufield.github.io/helpr/news/index.html","id":"helpr-0019000-devel","dir":"Changelog","previous_headings":"","what":"helpr 0.0.1.9000 (devel)","title":"helpr 0.0.1.9000 (devel)","text":"new dev …","code":""},{"path":"https://stufield.github.io/helpr/news/index.html","id":"helpr-001-tada","dir":"Changelog","previous_headings":"","what":"helpr 0.0.1 🎉","title":"helpr 0.0.1 🎉","text":"Initial release! 🥳","code":""}]
